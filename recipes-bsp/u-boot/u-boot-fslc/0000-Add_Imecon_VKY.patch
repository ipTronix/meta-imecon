Index: git/configs/imeconVKY_defconfig
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ git/configs/imeconVKY_defconfig	2016-07-05 11:06:17.220177764 +0200
@@ -0,0 +1,31 @@
+CONFIG_ARM=y
+CONFIG_ARCH_MX6=y
+CONFIG_TARGET_IMECONVKY=y
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/imecon/imeconVKY/imeconVKY.cfg,MX6Q,DDR_MB=1024,DEFCONFIG=\"imeconVKY\""
+CONFIG_HUSH_PARSER=y
+CONFIG_CMD_BOOTZ=y
+# CONFIG_CMD_IMLS is not set
+CONFIG_CMD_MEMTEST=y
+# CONFIG_CMD_FLASH is not set
+CONFIG_CMD_MMC=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_TIME=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_USB=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_G_DNL_MANUFACTURER="imecon"
+CONFIG_G_DNL_VENDOR_NUM=0x0525
+CONFIG_G_DNL_PRODUCT_NUM=0xa4a5
+CONFIG_OF_LIBFDT=y
Index: git/board/imecon/imeconVKY/imeconVKY.cfg
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ git/board/imecon/imeconVKY/imeconVKY.cfg	2016-07-05 10:55:52.488159841 +0200
@@ -0,0 +1,24 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2016 Nelson Integration LLC
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Refer doc/README.imximage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+
+IMAGE_VERSION 2
+BOOT_FROM      sd
+
+#define __ASSEMBLY__
+#include <config.h>
+#include "asm/arch/mx6-ddr.h"
+#include "asm/arch/iomux.h"
+#include "asm/arch/crm_regs.h"
+
+#include "ddr-setup.cfg"
+#include "1066mhz_4x128mx16.cfg"
+#include "../../../board/boundary/nitrogen6x/clocks.cfg"
Index: git/board/imecon/imeconVKY/Kconfig
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ git/board/imecon/imeconVKY/Kconfig	2016-07-05 10:55:52.488159841 +0200
@@ -0,0 +1,18 @@
+if TARGET_IMECONVKY
+
+config SYS_CPU
+	default "armv7"
+
+config SYS_BOARD
+	default "imeconVKY"
+
+config SYS_VENDOR
+	default "imecon"
+
+config SYS_SOC
+	default "mx6"
+
+config SYS_CONFIG_NAME
+	default "imeconVKY"
+
+endif
Index: git/board/imecon/imeconVKY/Makefile
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ git/board/imecon/imeconVKY/Makefile	2016-07-05 10:55:52.488159841 +0200
@@ -0,0 +1,7 @@
+#
+# Copyright (C) 2016, Nelson Integration LLC (eric@nelint.com)
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+obj-y  := imeconVKY.o
Index: git/board/imecon/imeconVKY/1066mhz_4x128mx16.cfg
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ git/board/imecon/imeconVKY/1066mhz_4x128mx16.cfg	2016-07-05 10:55:52.488159841 +0200
@@ -0,0 +1,42 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+DATA 4, MX6_MMDC_P0_MDPDC, 0x00020036
+DATA 4, MX6_MMDC_P0_MDCFG0, 0x555A7974
+DATA 4, MX6_MMDC_P0_MDCFG1, 0xDB538F64
+DATA 4, MX6_MMDC_P0_MDCFG2, 0x01FF00DB
+DATA 4, MX6_MMDC_P0_MDRWD, 0x000026D2
+DATA 4, MX6_MMDC_P0_MDOR, 0x005A1023
+DATA 4, MX6_MMDC_P0_MDOTC, 0x09444040
+DATA 4, MX6_MMDC_P0_MDPDC, 0x00025576
+DATA 4, MX6_MMDC_P0_MDASP, 0x00000027
+DATA 4, MX6_MMDC_P0_MDCTL, 0x831A0000
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04088032
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00008033
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00428031
+DATA 4, MX6_MMDC_P0_MDSCR, 0x19308030
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04008040
+DATA 4, MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P0_MDREF, 0x00005800
+DATA 4, MX6_MMDC_P0_MPODTCTRL, 0x00022227
+DATA 4, MX6_MMDC_P1_MPODTCTRL, 0x00022227
+DATA 4, MX6_MMDC_P0_MPDGCTRL0, 0x42720306
+DATA 4, MX6_MMDC_P0_MPDGCTRL1, 0x026F0266
+DATA 4, MX6_MMDC_P1_MPDGCTRL0, 0x4273030A
+DATA 4, MX6_MMDC_P1_MPDGCTRL1, 0x02740240
+DATA 4, MX6_MMDC_P0_MPRDDLCTL, 0x40404040
+DATA 4, MX6_MMDC_P1_MPRDDLCTL, 0x40404040
+DATA 4, MX6_MMDC_P0_MPWRDLCTL, 0x40404040
+DATA 4, MX6_MMDC_P1_MPWRDLCTL, 0x40404040
+DATA 4, MX6_MMDC_P0_MPWLDECTRL0, 0x001D0022
+DATA 4, MX6_MMDC_P0_MPWLDECTRL1, 0x002E0025
+DATA 4, MX6_MMDC_P1_MPWLDECTRL0, 0x001E0034
+DATA 4, MX6_MMDC_P1_MPWLDECTRL1, 0x00140024
+DATA 4, MX6_MMDC_P0_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P1_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00000000
+DATA 4, MX6_MMDC_P0_MAPSR, 0x00011006
Index: git/board/imecon/imeconVKY/ddr-setup.cfg
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ git/board/imecon/imeconVKY/ddr-setup.cfg	2016-07-05 10:55:52.488159841 +0200
@@ -0,0 +1,97 @@
+/*
+ * Copyright (C) 2015 Boundary Devices
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *      Addr-type register length (1,2 or 4 bytes)
+ *      Address   absolute address of the register
+ *      value     value to be stored in the register
+ */
+
+/*
+ * DDR3 settings
+ * MX6Q    ddr is limited to 1066 Mhz	currently 1056 MHz(528 MHz clock),
+ *	   memory bus width: 64 bits	x16/x32/x64
+ * MX6DL   ddr is limited to 800 MHz(400 MHz clock)
+ *	   memory bus width: 64 bits	x16/x32/x64
+ * MX6SOLO ddr is limited to 800 MHz(400 MHz clock)
+ *	   memory bus width: 32 bits	x16/x32
+ */
+DATA 4, MX6_IOM_DRAM_SDQS0, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS1, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS2, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS3, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS4, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS5, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS6, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS7, 0x00000030
+
+DATA 4, MX6_IOM_GRP_B0DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B1DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B2DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B3DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B4DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B5DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B6DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B7DS, 0x00000030
+DATA 4, MX6_IOM_GRP_ADDDS, 0x00000030
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+DATA 4, MX6_IOM_GRP_CTLDS, 0x00000030
+
+DATA 4, MX6_IOM_DRAM_DQM0, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM1, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM2, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM3, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM4, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM5, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM6, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM7, 0x00020030
+
+DATA 4, MX6_IOM_DRAM_CAS, 0x00020030
+DATA 4, MX6_IOM_DRAM_RAS, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCLK_0, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCLK_1, 0x00020030
+
+DATA 4, MX6_IOM_DRAM_RESET, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCKE0, 0x00003000
+DATA 4, MX6_IOM_DRAM_SDCKE1, 0x00003000
+
+DATA 4, MX6_IOM_DRAM_SDODT0, 0x00003030
+DATA 4, MX6_IOM_DRAM_SDODT1, 0x00003030
+
+/* (differential input) */
+DATA 4, MX6_IOM_DDRMODE_CTL, 0x00020000
+/* (differential input) */
+DATA 4, MX6_IOM_GRP_DDRMODE, 0x00020000
+/* disable ddr pullups */
+DATA 4, MX6_IOM_GRP_DDRPKE, 0x00000000
+DATA 4, MX6_IOM_DRAM_SDBA2, 0x00000000
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+DATA 4, MX6_IOM_GRP_DDR_TYPE, 0x000C0000
+
+/* Read data DQ Byte0-3 delay */
+DATA 4, MX6_MMDC_P0_MPRDDQBY0DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY1DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY2DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY3DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY0DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY1DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY2DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY3DL, 0x33333333
+
+/*
+ * MDMISC	mirroring-off	interleaved (row/bank/col)
+ *		WALAT 1
+ */
+DATA 4, MX6_MMDC_P0_MDMISC, 0x00011740
+
+/*
+ * MDSCR	con_req
+ */
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00008000
Index: git/board/imecon/imeconVKY/imeconVKY.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ git/board/imecon/imeconVKY/imeconVKY.c	2016-07-05 10:55:52.488159841 +0200
@@ -0,0 +1,420 @@
+/*
+ * Copyright (C) 2016 Nelson Integration LLC
+ *
+ * Author: Eric Nelson <eric@nelint.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+#include <common.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/crm_regs.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/iomux.h>
+#include <asm/arch/mx6-ddr.h>
+#include <asm/arch/mx6-pins.h>
+#include <asm/arch/mxc_hdmi.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/errno.h>
+#include <asm/gpio.h>
+#include <asm/imx-common/boot_mode.h>
+#include <asm/imx-common/iomux-v3.h>
+#include <asm/imx-common/mxc_i2c.h>
+#include <asm/imx-common/video.h>
+#include <asm/io.h>
+#include <fsl_esdhc.h>
+#include <i2c.h>
+#include <malloc.h>
+#include <micrel.h>
+#include <miiphy.h>
+#include <mmc.h>
+#include <netdev.h>
+#include <usb.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define UART_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define AUD_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_LOW | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_HYS | PAD_CTL_SRE_FAST)
+
+#define WEAK_PULLDN	(PAD_CTL_PUS_100K_DOWN |		\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_HYS | PAD_CTL_SRE_SLOW)
+
+#define WEAK_PULLUP	(PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_HYS | PAD_CTL_SRE_SLOW)
+
+static iomux_v3_cfg_t const slimtv1_pads[] = {
+	/* UART1 */
+	MX6_PAD_CSI0_DAT10__UART1_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+	MX6_PAD_CSI0_DAT11__UART1_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+
+	/* UART4 */
+	MX6_PAD_CSI0_DAT12__UART4_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+	MX6_PAD_CSI0_DAT13__UART4_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+
+	/* UART5 */
+	MX6_PAD_CSI0_DAT14__UART5_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+	MX6_PAD_CSI0_DAT15__UART5_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+
+	/* SGTL5000 */
+	MX6_PAD_SD2_DAT0__AUD4_RXD | MUX_PAD_CTRL(0x130b0),
+	MX6_PAD_SD2_DAT3__AUD4_TXC | MUX_PAD_CTRL(0x130b0),
+	MX6_PAD_SD2_DAT2__AUD4_TXD | MUX_PAD_CTRL(0x110b0),
+	MX6_PAD_SD2_DAT1__AUD4_TXFS | MUX_PAD_CTRL(0x130b0),
+	MX6_PAD_GPIO_0__CCM_CLKO1 | MUX_PAD_CTRL(0x000b0), /* sys_mclk */
+
+	/* ECSPI1: SPI NOR */
+	MX6_PAD_DISP0_DAT22__ECSPI1_MISO | MUX_PAD_CTRL(0x100b1),
+	MX6_PAD_DISP0_DAT21__ECSPI1_MOSI | MUX_PAD_CTRL(0x100b1),
+	MX6_PAD_DISP0_DAT20__ECSPI1_SCLK | MUX_PAD_CTRL(0x100b1),
+#define GP_ECSPI1_FPGA_CS	<&gpio3 23 GPIO_ACTIVE_LOW>
+	MX6_PAD_EIM_D23__GPIO3_IO23 | MUX_PAD_CTRL(0x0b0b0),
+
+	/* Ethernet and PHY */
+	MX6_PAD_ENET_MDIO__ENET_MDIO | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_ENET_MDC__ENET_MDC | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_TXC__RGMII_TXC | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_TD0__RGMII_TD0 | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_TD1__RGMII_TD1 | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_TD2__RGMII_TD2 | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_TD3__RGMII_TD3 | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_TX_CTL__RGMII_TX_CTL | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_ENET_REF_CLK__ENET_TX_CLK | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_RXC__RGMII_RXC | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_RD0__RGMII_RD0 | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_RD1__RGMII_RD1 | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_RD2__RGMII_RD2 | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_RD3__RGMII_RD3 | MUX_PAD_CTRL(0x1b0b0),
+	MX6_PAD_RGMII_RX_CTL__RGMII_RX_CTL | MUX_PAD_CTRL(0x1b0b0),
+#define GP_ENET_PHY_RESET	<&gpio1 27 GPIO_ACTIVE_LOW>
+	MX6_PAD_ENET_RXD0__GPIO1_IO27 | MUX_PAD_CTRL(0x0f0b0),		/* ethernet phy reset */
+#define GPIRQ_ENET_PHY		<&gpio1 28 IRQ_TYPE_LEVEL_LOW>
+	MX6_PAD_ENET_TX_EN__GPIO1_IO28 | MUX_PAD_CTRL(0x1b0b0),		/* ethernet phy interrupt */
+
+	/* I2C2 */
+	MX6_PAD_KEY_COL3__I2C2_SCL | MUX_PAD_CTRL(0x4001b8b1),
+	MX6_PAD_KEY_ROW3__I2C2_SDA | MUX_PAD_CTRL(0x4001b8b1),
+
+	/* ADV7612 */
+	MX6_PAD_GPIO_16__GPIO7_IO11 | MUX_PAD_CTRL(WEAK_PULLDN),  /* Chip select */
+	MX6_PAD_GPIO_17__GPIO7_IO12 | MUX_PAD_CTRL(WEAK_PULLUP),  /* RESETN */
+
+	/* I2C3 */
+        MX6_PAD_EIM_D17__I2C3_SCL | MUX_PAD_CTRL(0x4001b8b1),
+	MX6_PAD_EIM_D18__I2C3_SDA | MUX_PAD_CTRL(0x4001b8b1),
+
+	/* OTG */
+#define GP_OTG_VBUS		IMX_GPIO_NR(6, 5)
+	MX6_PAD_CSI0_DAT19__GPIO6_IO05 | MUX_PAD_CTRL(0x030b0), /* VBUS */
+#define GP_OTG_ID		IMX_GPIO_NR(1, 24)
+	MX6_PAD_ENET_RX_ER__USB_OTG_ID | MUX_PAD_CTRL(0x1b0b0) | MUX_MODE_SION,
+	MX6_PAD_KEY_COL4__USB_OTG_OC | MUX_PAD_CTRL(0x1b0b0),
+
+	/* USDHC1 - SD card*/
+	MX6_PAD_SD1_CMD__SD1_CMD | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD1_CLK__SD1_CLK | MUX_PAD_CTRL(0x10059),
+	MX6_PAD_SD1_DAT0__SD1_DATA0 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD1_DAT1__SD1_DATA1 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD1_DAT2__SD1_DATA2 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD1_DAT3__SD1_DATA3 | MUX_PAD_CTRL(0x17059),
+#define GP_USDHC1_CD           IMX_GPIO_NR(1, 1)
+	MX6_PAD_GPIO_1__SD1_CD_B | MUX_PAD_CTRL(WEAK_PULLUP),
+
+	/* USDHC3 - eMMC */
+	MX6_PAD_SD3_CMD__SD3_CMD | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD3_CLK__SD3_CLK | MUX_PAD_CTRL(0x10059),
+	MX6_PAD_SD3_DAT0__SD3_DATA0 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD3_DAT1__SD3_DATA1 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD3_DAT2__SD3_DATA2 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD3_DAT3__SD3_DATA3 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD3_DAT4__SD3_DATA4 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD3_DAT5__SD3_DATA5 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD3_DAT6__SD3_DATA6 | MUX_PAD_CTRL(0x17059),
+	MX6_PAD_SD3_DAT7__SD3_DATA7 | MUX_PAD_CTRL(0x17059),
+#define GP_EMMC_RESET IMX_GPIO_NR(7, 8)
+	MX6_PAD_SD3_RST__GPIO7_IO08 | MUX_PAD_CTRL(0x1b0b0),
+
+	/* LDB */
+#define PANEL_ON		IMX_GPIO_NR(3, 25)
+	MX6_PAD_EIM_D25__GPIO3_IO25 | MUX_PAD_CTRL(WEAK_PULLUP),
+};
+
+int dram_init(void)
+{
+	gd->ram_size = CONFIG_DDR_MB * SZ_1M;
+
+	return 0;
+}
+
+int checkboard(void)
+{
+	puts("Board: SlimTV1\n");
+	return 0;
+}
+
+static const struct boot_mode board_boot_modes[] = {
+	/* 4 bit bus width */
+	{"mmc0",	MAKE_CFGVAL(0x40, 0x30, 0x00, 0x00)},
+	{"mmc1",	MAKE_CFGVAL(0x60, 0x58, 0x00, 0x00)},	/* 8-bit eMMC */
+	{NULL,		0},
+};
+
+int misc_init_r(void)
+{
+	add_board_boot_modes(board_boot_modes);
+	return 0;
+}
+
+struct display_info_t const displays[] = {{
+	.bus	= -1,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_RGB666,
+	.detect	= NULL,
+	.enable	= NULL,
+	.mode	= {
+		.name           = "Hannstar-XGA",
+		.refresh        = 60,
+		.xres           = 1024,
+		.yres           = 768,
+		.pixclock       = 15384,
+		.left_margin    = 160,
+		.right_margin   = 24,
+		.upper_margin   = 29,
+		.lower_margin   = 3,
+		.hsync_len      = 136,
+		.vsync_len      = 6,
+		.sync           = FB_SYNC_EXT,
+		.vmode          = FB_VMODE_NONINTERLACED
+} } };
+size_t display_count = ARRAY_SIZE(displays);
+
+#define CHSCCDR_IPU_PRE_CLK_PLL5 2
+
+static void setup_display(void)
+{
+	struct mxc_ccm_reg *mxc_ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+	struct iomuxc *iomux = (struct iomuxc *)IOMUXC_BASE_ADDR;
+	int reg;
+
+	enable_ipu_clock();
+
+	/* Turn on LDB0,IPU,IPU DI0 clocks */
+	reg = __raw_readl(&mxc_ccm->CCGR3);
+	reg |=  MXC_CCM_CCGR3_LDB_DI0_MASK;
+	writel(reg, &mxc_ccm->CCGR3);
+
+	/* set LDB0, LDB1 clk select to 011/011 */
+	reg = readl(&mxc_ccm->cs2cdr);
+	reg &= ~(MXC_CCM_CS2CDR_LDB_DI0_CLK_SEL_MASK
+		 |MXC_CCM_CS2CDR_LDB_DI1_CLK_SEL_MASK);
+	reg |= (3<<MXC_CCM_CS2CDR_LDB_DI0_CLK_SEL_OFFSET)
+	      |(3<<MXC_CCM_CS2CDR_LDB_DI1_CLK_SEL_OFFSET);
+	writel(reg, &mxc_ccm->cs2cdr);
+
+	reg = IOMUXC_GPR2_BGREF_RRMODE_EXTERNAL_RES
+	     |IOMUXC_GPR2_DI1_VS_POLARITY_ACTIVE_LOW
+	     |IOMUXC_GPR2_DI0_VS_POLARITY_ACTIVE_LOW
+	     |IOMUXC_GPR2_BIT_MAPPING_CH1_SPWG
+	     |IOMUXC_GPR2_DATA_WIDTH_CH1_18BIT
+	     |IOMUXC_GPR2_BIT_MAPPING_CH0_SPWG
+	     |IOMUXC_GPR2_DATA_WIDTH_CH0_18BIT;
+	writel(reg, &iomux->gpr[2]);
+
+	reg = readl(&iomux->gpr[3]);
+	reg = (reg & ~(IOMUXC_GPR3_LVDS0_MUX_CTL_MASK
+			|IOMUXC_GPR3_HDMI_MUX_CTL_MASK))
+	    | (IOMUXC_GPR3_MUX_SRC_IPU1_DI0
+	       <<IOMUXC_GPR3_LVDS0_MUX_CTL_OFFSET);
+	writel(reg, &iomux->gpr[3]);
+
+	reg = readl(&mxc_ccm->chsccdr);
+	reg &= ~(MXC_CCM_CHSCCDR_IPU1_DI0_CLK_SEL_MASK |
+		 MXC_CCM_CHSCCDR_IPU1_DI0_PODF_MASK |
+		 MXC_CCM_CHSCCDR_IPU1_DI0_PRE_CLK_SEL_MASK);
+	reg |= (CHSCCDR_CLK_SEL_LDB_DI0 << MXC_CCM_CHSCCDR_IPU1_DI0_CLK_SEL_OFFSET) |
+		((7 - 1) << MXC_CCM_CHSCCDR_IPU1_DI0_PODF_OFFSET) |
+		(CHSCCDR_IPU_PRE_CLK_PLL5 << MXC_CCM_CHSCCDR_IPU1_DI0_PRE_CLK_SEL_OFFSET);
+	writel(reg, &mxc_ccm->chsccdr);
+}
+
+int overwrite_console(void)
+{
+	return 1;
+}
+
+int board_early_init_f(void)
+{
+	SETUP_IOMUX_PADS(slimtv1_pads);
+
+	gpio_direction_output(PANEL_ON, 1);
+
+	return 0;
+}
+
+static struct i2c_pads_info i2c_devs[] = {
+{ /* I2C2 - SGTL5000, ADV7612 */
+	.scl = {
+		.i2c_mode = MX6_PAD_KEY_COL3__I2C2_SCL
+				| MUX_PAD_CTRL(0x4001b8b1),
+		.gpio_mode = MX6_PAD_KEY_COL3__GPIO4_IO12
+				| MUX_PAD_CTRL(0x4001b8b1),
+		.gp = IMX_GPIO_NR(4, 12)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_KEY_ROW3__I2C2_SDA
+				| MUX_PAD_CTRL(0x4001b8b1),
+		.gpio_mode = MX6_PAD_KEY_ROW3__GPIO4_IO13
+				| MUX_PAD_CTRL(0x4001b8b1),
+		.gp = IMX_GPIO_NR(4, 13)
+	}
+}, {
+	/* I2C3 - ADV7511 (currently unused) */
+	.scl = {
+		.i2c_mode = MX6_PAD_EIM_D17__I2C3_SCL
+				| MUX_PAD_CTRL(0x4001b8b1),
+		.gpio_mode = MX6_PAD_EIM_D17__GPIO3_IO17
+				| MUX_PAD_CTRL(0x4001b8b1),
+		.gp = IMX_GPIO_NR(3, 17)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_EIM_D18__I2C3_SDA
+				| MUX_PAD_CTRL(0x4001b8b1),
+		.gpio_mode = MX6_PAD_EIM_D18__GPIO3_IO18
+				| MUX_PAD_CTRL(0x4001b8b1),
+		.gp = IMX_GPIO_NR(3, 18)
+	}
+} };
+
+static struct fsl_esdhc_cfg usdhc_cfg[] = {
+	{.esdhc_base = USDHC1_BASE_ADDR, .max_bus_width = 4},
+	{.esdhc_base = USDHC3_BASE_ADDR, .max_bus_width = 8},
+};
+
+int board_mmc_getcd(struct mmc *mmc)
+{
+	struct fsl_esdhc_cfg *cfg = (struct fsl_esdhc_cfg *)mmc->priv;
+
+	if (cfg->esdhc_base == USDHC3_BASE_ADDR)
+		return 1;	/* eMMC always present */
+	return !gpio_get_value(GP_USDHC1_CD);
+}
+
+int board_mmc_init(bd_t *bis)
+{
+	int ret;
+	u32 index = 0;
+
+	usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
+	usdhc_cfg[1].sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
+
+	for (index = 0; index < CONFIG_SYS_FSL_USDHC_NUM; ++index) {
+		switch (index) {
+		case 0:
+			break;
+		case 1:
+			gpio_set_value(GP_EMMC_RESET, 1); /* release reset */
+			break;
+		default:
+			printf("Warning: you configured more USDHC controllers"
+				"(%d) then supported by the board (%d)\n",
+				index + 1, CONFIG_SYS_FSL_USDHC_NUM);
+			return -EINVAL;
+		}
+
+		ret = fsl_esdhc_initialize(bis, &usdhc_cfg[index]);
+		if (ret)
+			return ret;
+	}
+	return 0;
+}
+
+int board_phy_config(struct phy_device *phydev)
+{
+	if (phydev->drv->uid == 0x221610) {
+		/* min rx data delay */
+		ksz9021_phy_extended_write(phydev,
+			MII_KSZ9021_EXT_RGMII_RX_DATA_SKEW, 0x0);
+		/* min tx data delay */
+		ksz9021_phy_extended_write(phydev,
+			MII_KSZ9021_EXT_RGMII_TX_DATA_SKEW, 0x0);
+		/* max rx/tx clock delay, min rx/tx control */
+		ksz9021_phy_extended_write(phydev,
+			MII_KSZ9021_EXT_RGMII_CLOCK_SKEW, 0xf0f0);
+	}
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+	return 0;
+}
+
+int board_eth_init(bd_t *bis)
+{
+	uint32_t base = IMX_FEC_BASE;
+	struct mii_dev *bus = NULL;
+	struct phy_device *phydev = NULL;
+	int ret;
+
+	bus = fec_get_miibus(base, -1);
+	if (!bus)
+		return -EINVAL;
+
+	/* scan phy 2 */
+	phydev = phy_find_by_mask(bus, (1 << 2), PHY_INTERFACE_MODE_RGMII);
+	if (!phydev) {
+		ret = -EINVAL;
+		goto free_bus;
+	}
+	printf("using phy at %d\n", phydev->addr);
+	ret  = fec_probe(bis, -1, base, bus, phydev);
+	if (ret)
+		goto free_phydev;
+
+	/* For otg ethernet*/
+	usb_eth_initialize(bis);
+
+	return 0;
+
+free_phydev:
+	free(phydev);
+free_bus:
+	free(bus);
+	return ret;
+}
+
+int board_init(void)
+{
+	struct iomuxc *const iomuxc_regs = (struct iomuxc *)IOMUXC_BASE_ADDR;
+	int i;
+
+	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
+
+	for (i = 0; i < ARRAY_SIZE(i2c_devs); i++) {
+		setup_i2c(i, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_devs[i]);
+	}
+
+	clrsetbits_le32(&iomuxc_regs->gpr[1],
+			IOMUXC_GPR1_OTG_ID_MASK,
+			IOMUXC_GPR1_OTG_ID_GPIO1);
+	/* OTG is host if ID pin is low */
+	gpio_direction_output(GP_OTG_VBUS, gpio_get_value(GP_OTG_ID) ^ 1);
+
+	setup_display();
+	return 0;
+}
+
+int board_late_init(void)
+{
+	int cpurev = get_cpu_rev();
+
+	setenv("cpu", get_imx_type((cpurev & 0xFF000) >> 12));
+	if (!getenv("board"))
+		setenv("board","slimtv1");
+	if (!getenv("uboot_defconfig"))
+		setenv("uboot_defconfig", CONFIG_DEFCONFIG);
+	return 0;
+}
Index: git/arch/arm/Kconfig
===================================================================
--- git.orig/arch/arm/Kconfig	2016-07-05 10:55:51.644159816 +0200
+++ git/arch/arm/Kconfig	2016-07-05 10:55:52.488159841 +0200
@@ -79,7 +79,11 @@
 
 choice
 	prompt "Target select"
-	default TARGET_HIKEY
+	default TARGET_IMECONVKY
+
+config TARGET_IMECONVKY
+	bool "Imecon VKY Slim TV 1"
+	select CPU_V7
 
 config ARCH_AT91
 	bool "Atmel AT91"
@@ -846,6 +850,7 @@
 source "board/gumstix/pepper/Kconfig"
 source "board/h2200/Kconfig"
 source "board/hisilicon/hikey/Kconfig"
+source "board/imecon/imeconVKY/Kconfig"
 source "board/imx31_phycore/Kconfig"
 source "board/isee/igep0033/Kconfig"
 source "board/mpl/vcma9/Kconfig"
Index: git/include/configs/imeconVKY.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ git/include/configs/imeconVKY.h	2016-07-05 10:55:52.488159841 +0200
@@ -0,0 +1,188 @@
+/*
+ * Copyright (C) 2010-2011 Freescale Semiconductor, Inc.
+ * Configuration settings for the Imecon VKY SlimTV1 board
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include "mx6_common.h"
+
+/* Size of malloc() pool */
+#define CONFIG_SYS_MALLOC_LEN		(40 * 1024 * 1024)
+
+#define CONFIG_MXC_SPI
+#define CONFIG_SF_DEFAULT_BUS  0
+#define CONFIG_SF_DEFAULT_CS   0
+#define CONFIG_SF_DEFAULT_SPEED 25000000
+#define CONFIG_SF_DEFAULT_MODE (SPI_MODE_0)
+
+#define CONFIG_BOARD_EARLY_INIT_F
+#define CONFIG_MISC_INIT_R
+#define CONFIG_BOARD_LATE_INIT
+
+#define CONFIG_CMD_FUSE
+#define CONFIG_MXC_OCOTP
+
+#define CONFIG_MXC_UART
+#define CONFIG_MXC_UART_BASE	       UART1_BASE
+
+/* I2C Configs */
+#define CONFIG_SYS_I2C
+#define CONFIG_SYS_I2C_MXC
+#define CONFIG_SYS_I2C_MXC_I2C2		/* enable I2C bus 2 */
+#define CONFIG_SYS_I2C_MXC_I2C3		/* enable I2C bus 3 */
+#define CONFIG_SYS_I2C_SPEED		100000
+#define CONFIG_I2C_EDID
+
+/* MMC Configs */
+#define CONFIG_SYS_FSL_ESDHC_ADDR      0
+#define CONFIG_SYS_FSL_USDHC_NUM       2
+#define CONFIG_EFI_PARTITION
+
+/* Ethernet configuration */
+#define CONFIG_FEC_MXC
+#define CONFIG_MII
+#define IMX_FEC_BASE			ENET_BASE_ADDR
+#define CONFIG_FEC_XCV_TYPE		RGMII
+#define CONFIG_ETHPRIME			"FEC"
+#define CONFIG_FEC_MXC_PHYADDR		2
+#define CONFIG_PHYLIB
+#define CONFIG_PHY_MICREL
+#define CONFIG_PHY_MICREL_KSZ9021
+
+/* USB configuration */
+#define CONFIG_CI_UDC
+#define CONFIG_USBD_HS
+#define CONFIG_USB_GADGET_DUALSPEED
+#define CONFIG_USB_ETHER
+#define CONFIG_USB_ETH_CDC
+#define CONFIG_USB_EHCI
+#define CONFIG_USB_EHCI_MX6
+#define CONFIG_USB_STORAGE
+#define CONFIG_USB_HOST_ETHER
+#define CONFIG_USB_MAX_CONTROLLER_COUNT 2
+#define CONFIG_EHCI_HCD_INIT_AFTER_RESET	/* For OTG port */
+#define CONFIG_MXC_USB_PORTSC	(PORT_PTS_UTMI | PORT_PTS_PTW)
+#define CONFIG_MXC_USB_FLAGS	0
+#define CONFIG_USB_KEYBOARD
+#define CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP
+#define CONFIG_USB_FUNCTION_MASS_STORAGE
+#define CONFIG_USBDOWNLOAD_GADGET
+#define CONFIG_USB_GADGET_VBUS_DRAW	2
+
+/* Miscellaneous commands */
+#define CONFIG_CMD_BMODE
+
+/* Display configuration */
+#define CONFIG_VIDEO
+#define CONFIG_VIDEO_IPUV3
+#define CONFIG_CFB_CONSOLE
+#define CONFIG_VGA_AS_SINGLE_DEVICE
+#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_VIDEO_BMP_GZIP
+#define CONFIG_SYS_VIDEO_LOGO_MAX_SIZE (6 * 1024 * 1024)
+#define CONFIG_BMP_16BPP
+#define CONFIG_IPUV3_CLK 264000000
+#define CONFIG_CMD_BMP
+#define CONFIG_CONSOLE_MUX
+#define CONFIG_IMX_VIDEO_SKIP
+
+#define CONFIG_PREBOOT                 ""
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	"console=ttymxc0\0" \
+	"clearenv=if sf probe || sf probe || sf probe 1 ; then " \
+		"sf erase 0xc0000 0x2000 && " \
+		"echo restored environment to factory default ; fi\0" \
+	"bootcmd=if gpio input 24 ; then " \
+			"setenv bootdevs usb mmc ; " \
+		"else " \
+			"setenv bootdevs mmc usb ; " \
+		"fi; " \
+		"for dtype in ${bootdevs}" \
+		"; do " \
+			"if itest.s \"xusb\" == \"x${dtype}\" ; then " \
+				"usb start ;" \
+				"setenv devnums 0 ;" \
+			"else " \
+				"setenv devnums 0 1;" \
+			"fi ;" \
+			"for disk in ${devnums} ; do ${dtype} dev ${disk} ;" \
+				"load " \
+					"${dtype} ${disk}:1 " \
+					"10008000 " \
+					"/6x_bootscript" \
+					"&& source 10008000 ; " \
+			"done ; " \
+		"done; " \
+		"setenv stdout serial,vga ; " \
+		"echo ; echo 6x_bootscript not found ; " \
+		"echo ; echo serial console at 115200, 8N1 ; echo ; " \
+		"setenv stdout serial; " \
+		"for disk in 1 0 ; do " \
+			"if mmc dev ${disk} ; then " \
+				"setenv stdout serial,vga; " \
+				"echo expose MMC ${disk} over USB; " \
+				"ums 0 mmc ${disk}; " \
+			"fi ;" \
+		"done; " \
+		"\0" \
+	"dosplash=no\0" \
+	"dtbname=imx6q-slimtv1.dtb\0" \
+	"fdt_addr=0x13000000\0" \
+	"fdt_high=0xffffffff\0" \
+	"initrd_high=0xffffffff\0" \
+	"loadsplash=if sf probe ; then sf read ${splashimage} c2000 ${splashsize} ; fi\0" \
+	"upgradeu=for dtype in ${bootdevs}" \
+		"; do " \
+		"for disk in 0 1 ; do ${dtype} dev ${disk} ;" \
+			"load ${dtype} ${disk}:1 10008000 " \
+				"/6x_upgrade " \
+				"&& source 10008000 ; " \
+		"done ; " \
+	"done\0" \
+	"usbnet_devaddr=00:19:b8:00:00:02\0" \
+	"usbnet_hostaddr=00:19:b8:00:00:01\0" \
+	"usbrecover=setenv ethact usb_ether; " \
+		"setenv ipaddr 10.0.0.2; " \
+		"setenv netmask 255.255.255.0; " \
+		"setenv serverip 10.0.0.1; " \
+		"setenv bootargs console=ttymxc1,115200; " \
+		"tftpboot 10800000 10.0.0.1:uImage-${board}-recovery" \
+		"&& tftpboot 12800000 10.0.0.1:uramdisk-${board}-recovery.img " \
+		"&& bootm 10800000 12800000\0" \
+
+/* Physical Memory Map */
+#define CONFIG_NR_DRAM_BANKS	       1
+#define PHYS_SDRAM		       MMDC0_ARB_BASE_ADDR
+#define CONFIG_SYS_SDRAM_BASE	       PHYS_SDRAM
+#define CONFIG_SYS_INIT_RAM_ADDR       IRAM_BASE_ADDR
+#define CONFIG_SYS_INIT_RAM_SIZE       IRAM_SIZE
+
+#define CONFIG_SYS_INIT_SP_OFFSET \
+	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+
+#define CONFIG_SYS_ALT_MEMTEST
+#define CONFIG_SYS_MEMTEST_START       PHYS_SDRAM
+#define CONFIG_SYS_MEMTEST_END	       PHYS_SDRAM + 0x10000
+#define CONFIG_SYS_MEMTEST_SCRATCH     PHYS_SDRAM + 0x800000
+
+/* Environment organization */
+#define CONFIG_ENV_IS_IN_MMC
+#define CONFIG_ENV_OFFSET		(768 * 1024)
+#define CONFIG_ENV_SIZE			SZ_8K
+#define CONFIG_SYS_MMC_ENV_DEV		0	/* SD card*/
+
+/* extra commands */
+#define CONFIG_CMD_UNZIP
+
+#endif	       /* __CONFIG_H */
Index: git/arch/arm/cpu/armv7/mx6/Kconfig
===================================================================
--- git.orig/arch/arm/cpu/armv7/mx6/Kconfig	2016-07-05 10:55:51.652159817 +0200
+++ git/arch/arm/cpu/armv7/mx6/Kconfig	2016-07-05 10:55:52.488159841 +0200
@@ -201,6 +201,7 @@
 source "board/freescale/mx6sxsabreauto/Kconfig"
 source "board/freescale/mx6ul_14x14_evk/Kconfig"
 source "board/gateworks/gw_ventana/Kconfig"
+source "board/imecon/imeconVKY/Kconfig"
 source "board/kosagi/novena/Kconfig"
 source "board/seco/Kconfig"
 source "board/solidrun/mx6cuboxi/Kconfig"
